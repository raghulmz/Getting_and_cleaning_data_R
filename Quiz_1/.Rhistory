install.packages("devtools")
source("~/.Rprofile")
source("~/.Rprofile")
paste ("raghulmz",Sys.info () ["nodename"], collapse = "@")
paste (c("raghulmz",Sys.info () ["nodename"]), collapse = "@")
source("~/.Rprofile")
ls()
getwd()
list.files("../Workspace/my_functions/")
source("~/.Rprofile")
list.files("..//my_functions/")
list.files("../my_functions/")
getwd()
setwd("~/Data_Science/R_stuff/Workspace/default/")
getwd()
source("~/.Rprofile")
getwd()
source("../my_functions/iv.r")
source("../my_functions/information_value/iv.r")
df<-read.csv(file = "~/Data_Science/Kaggle/titanic//data//train.csv")
names(df)
df<-df[,c(-1,-4,-9,-11)]
iv(df = df, target = "Survived")
source("../my_functions/linear_regression/gradient_decent.r")
df<-read.csv(file = "./data//mlr04.csv")
df<-read.csv(file = "../my_functions/linear_regression/data//mlr04.csv")
names(df)
head(df)
gradient_descent(df,"X1",alpha=0.00000005,it=30000)
conv<-read.csv("../my_functions/linear_regression/J.dat")
head(conv)
conv<-read.csv("../my_functions/linear_regression/J.dat",header=F)
head(conv)
df1<-df[,c(6,10)]
head(df1)
options(digits = 12)                                                                                 # number of digits to print. Default is 7, max is 15
head(conv)
plot(conv$V1)
gradient_descent(df,"X1",alpha=0.00000005,it=40000)
conv<-read.csv("../my_functions/linear_regression/J.dat",header=F)
head(conv)
plot(conv$V1)
dim(conv)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
gradient_descent(df,"X1",alpha=0.00000001,it=40000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
gradient_descent(df,"X1",alpha=0.00000001,it=50000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
df1<-df[,c(6,10)]
gradient_descent(df,"X1",alpha=0.00000002,it=50000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
gradient_descent(df,"X1",alpha=0.00000003,it=60000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
gradient_descent(df,"X1",alpha=0.000000025,it=60000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1)
plot(conv$V1,type = "line")
plot(conv$V1,type = "l")
?plot
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000022,it=60000)
conv<-read.csv("./J.dat",header=F)
head(conv)
dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000022,it=100000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.00000002,it=100000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.00000001,it=100000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.00000001,it=200000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000001,it=200000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000001,it=400000)
gradient_descent(df,"X1",alpha=0.000000001,it=400000)
gradient_descent(df,"X1",alpha=0.000000001,it=400000)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000001,it=400000)
source("../my_functions/linear_regression/gradient_decent.r")
source("../my_functions/linear_regression/gradient_decent.r")
df<-read.csv(file = "../my_functions/linear_regression/data//mlr04.csv")
names(df)
head(df)
conv<-read.csv("./J.dat",header=F)
#head(conv)
#dim(conv)
plot(conv$V1,type = "l")
gradient_descent(df,"X1",alpha=0.000000001,it=400)
theta<-gradient_descent(df,"X1",alpha=0.000000001,it=400)
theta
class(theta)
df
plot(df[1],df[2])
df[1]
df[[1]]
plot(df[[1]],df[[2]])
theta<-gradient_descent(df,"X1",alpha=0.000000001,it=400,scaling=F)
theta
install.packages("XLConnect")
setwd("../../..//Coursera/Data Science Specialization - John Hopkins University/Getting and Cleaning Data/")
setwd("../../..//Coursera/Data Science Specialization - John Hopkins University/Getting and Cleaning Data/R/Quiz_1/")
library("XML")
library("xlsx")
library("jsonlite")
library("dplyr")
data1<-read.csv(file = "getdata-data-ss06hid.csv",header=T)
names(data1)
levels(data1$VAL)
unique(data1$VAL)
data1$VAL
data1$VAL>=14
data1$VAL[data1$VAL>=14]
data1$VAL>=14
data1$VAL[which(data1$VAL>=14)]
length(data1$VAL[which(data1$VAL>=14)])
length(data1$VAL[which(data1$VAL=24)])
length(data1$VAL[which(data1$VAL==24)])
data1$FES
dat<-read.xlsx("./getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23,
rowIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
?read.xlsx
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23,
rowIndex=7:15)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23,
rowIndex=7:15)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23,
rowIndex=8:15)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23,
rowIndex=15)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex=18:23)
dat
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
rowIndex=18:23,
colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
fileURL<-"http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileURL,useInternalNodes = T)
fileURL<- "./getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternalNodes = T)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode
rootNode[1]
rootNode[[1]]
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[3]]
rootNode[[1]][[1]][[3]]
rootNode[[1]][[1]][[2]]
rootNode[[1]][[1]]
rootNode[[1]]
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode,xmlValue,"row")
rootNode[[1]][[1]]
xmlName(rootNode)
names(rootNode)
xpathSApply(rootNode,"//name",xmlValue)
rootNode[[1]][[1]]
xpathSApply(rootNode,"//zipcode",xmlValue)
zipcodes<-xpathSApply(rootNode,"//zipcode",xmlValue)
length(zipcodes[zipcodes==21231])
doc
library("data.table")
library(data.table)
library(data.table)
DT<-fread("./getdata-data-ss06pid.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time({mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]})
data1<-read.csv(file = "getdata-data-ss06hid.csv",header=T)
data1$FES
library(httr)
